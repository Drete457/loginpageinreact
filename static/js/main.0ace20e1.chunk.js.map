{"version":3,"sources":["components/Sign.jsx","components/Input.jsx","components/SubmitButton.jsx","components/SignExpanded.jsx","components/SignCollapsed.jsx","components/Modal.jsx","login.jsx","index.js"],"names":["Sign","props","icon","type","className","onClick","onChange","Input","id","name","autoComplete","required","placeholder","SubmitButton","SignExpanded","isFinished","setState","animIsFinished","state","flexState","this","style","flexVal","spring","onRest","flexGrow","opacity","stiffness","damping","y","WebkitTransform","transform","href","Component","SignCollapsed","Modal","onReset","wasClickedLeft","wasClickedRight","onClickLeft","onClickRight","modalContent","Login","useState","mounted","setMounted","loginPage","useEffect","handleSubmit","onSubmit","TransitionGroup","transitioname","transitionentertimeout","transitionleavetimeout","ReactDOM","render","document","getElementById"],"mappings":"0RAIe,SAASA,EAAKC,GAC3B,IAAIC,EAAO,KAQX,OALEA,EADiB,WAAfD,EAAME,KACD,kBAAC,IAAD,CAAiBC,UAAU,UAE3B,kBAAC,IAAD,CAAaA,UAAU,UAI9B,yBACEC,QAASJ,EAAMK,SACfF,UAA0B,WAAfH,EAAME,KAAoB,SAAW,UAEhD,yBAAKC,UAAU,UACZF,EACD,2BAAmB,WAAfD,EAAME,KAAoB,UAAY,a,WCjBnC,SAASI,EAAMN,GAC5B,OACE,yBAAKG,UAAU,SACb,2BACEI,GAAIP,EAAMQ,KACVC,aAAa,QACbC,UAAQ,EACRR,KAAMF,EAAME,KACZS,YAAaX,EAAMW,eCPZ,SAASC,EAAaZ,GACnC,OACE,yBAAKG,UAAW,gBACd,4BACEA,UAA0B,WAAfH,EAAME,KAAoB,eAAiB,gBAEtD,kBAAC,IAAD,Q,ICJaW,E,kDACnB,WAAYb,GAAQ,IAAD,8BACjB,cAAMA,IAWRc,WAAa,WACX,EAAKC,SAAS,CAAEC,gBAAgB,KAXhC,EAAKC,MAAQ,CACXC,WAAW,EACXF,gBAAgB,GAJD,E,gEASjBG,KAAKJ,SAAS,CAAEG,WAAYC,KAAKF,MAAMC,c,+BAO/B,IAAD,OACP,OACE,kBAAC,SAAD,CACEE,MAAO,CACLC,QAASC,iBAAOH,KAAKF,MAAMC,UAAY,EAAI,IAE7CK,OAAQJ,KAAKL,aAEZ,gBAAGO,EAAH,EAAGA,QAAH,OACC,yBACElB,UACsB,WAApB,EAAKH,MAAME,KAAoB,iBAAmB,iBAEpDkB,MAAO,CACLI,SAAS,GAAD,OAAKH,KAGf,kBAAC,SAAD,CACED,MAAO,CACLK,QAASH,iBAAO,EAAKL,MAAMC,UAAY,EAAI,EAAG,CAC5CQ,UAAW,IACXC,QAAS,KAEXC,EAAGN,iBAAO,EAAKL,MAAMC,UAAY,EAAI,GAAI,CACvCQ,UAAW,IACXC,QAAS,QAIZ,gBAAGF,EAAH,EAAGA,QAASG,EAAZ,EAAYA,EAAZ,OACC,0BACEzB,UAAU,UACViB,MAAO,CACLS,gBAAgB,kBAAD,OAAoBD,EAApB,UACfE,UAAU,kBAAD,OAAoBF,EAApB,UACTH,QAAQ,GAAD,OAAKA,KAGd,4BACuB,WAApB,EAAKzB,MAAME,KAAoB,UAAY,WAE9C,kBAACI,EAAD,CAAOC,GAAG,QAAQL,KAAK,OAAOS,YAAY,UAC1C,kBAACL,EAAD,CAAOC,GAAG,WAAWL,KAAK,WAAWS,YAAY,aACjD,kBAACC,EAAD,CAAcV,KAAM,EAAKF,MAAME,OAC/B,uBAAG6B,KAAK,MAAM5B,UAAU,cACD,WAApB,EAAKH,MAAME,KAAoB,mBAAqB,gB,GA9D/B8B,aCF3B,SAASC,EAAcjC,GACpC,IAAIC,EAAO,KAQX,OALEA,EADiB,WAAfD,EAAME,KACD,kBAAC,IAAD,CAAiBC,UAAU,mBAE3B,kBAAC,IAAD,CAAaA,UAAU,mBAI9B,yBACEC,QAASJ,EAAMK,SACfF,UACiB,WAAfH,EAAME,KAAoB,kBAAoB,mBAG/CD,G,ICdciC,E,kDACnB,WAAYlC,GAAQ,IAAD,8BACjB,cAAMA,IAORmC,QAAU,WACR,EAAKpB,SAAS,CACZqB,gBAAgB,EAChBC,iBAAiB,KAXF,EAenBC,YAAc,WACZ,EAAKvB,SAAS,CAAEqB,gBAAiB,EAAKnB,MAAMmB,iBAAkB,YAE3B,IAA/BjB,KAAKF,MAAMoB,kBACmB,IAA9BlB,KAAKF,MAAMmB,gBAEXjB,KAAKJ,SAAS,CAAEsB,iBAAiB,QArBpB,EA0BnBE,aAAe,WACb,EAAKxB,SACH,CAAEsB,iBAAkB,EAAKpB,MAAMoB,kBAC/B,YAEmC,IAA/BlB,KAAKF,MAAMoB,kBACmB,IAA9BlB,KAAKF,MAAMmB,gBAEXjB,KAAKJ,SAAS,CAAEqB,gBAAgB,QAhCtC,EAAKnB,MAAQ,CACXmB,gBAAgB,EAChBC,iBAAiB,GAJF,E,qDAyCjB,IAAIG,EAAe,KAwCnB,OArCgC,IAA9BrB,KAAKF,MAAMmB,iBACoB,IAA/BjB,KAAKF,MAAMoB,gBAEXG,EACE,yBAAKrC,UAAU,SACb,kBAACJ,EAAD,CAAMG,KAAK,SAASG,SAAUc,KAAKmB,cACnC,kBAACvC,EAAD,CAAMG,KAAK,SAASG,SAAUc,KAAKoB,iBAIT,IAA9BpB,KAAKF,MAAMmB,iBACoB,IAA/BjB,KAAKF,MAAMoB,gBAEXG,EACE,yBAAKrC,UAAU,SACb,kBAAC8B,EAAD,CACE/B,KAAK,SACLG,SAAUc,KAAKmB,cAEjB,kBAAC,EAAD,CAAcpC,KAAK,aAIO,IAA9BiB,KAAKF,MAAMmB,iBACoB,IAA/BjB,KAAKF,MAAMoB,kBAEXG,EACE,yBAAKrC,UAAU,SACb,kBAAC,EAAD,CAAcD,KAAK,WACnB,kBAAC+B,EAAD,CACE/B,KAAK,SACLG,SAAUc,KAAKoB,iBAMhB,yBAAKpC,UAAU,SAASqC,O,GAlFAR,aCDpB,SAASS,IAAS,IAAD,EACFC,oBAAS,GADP,mBACzBC,EADyB,KAChBC,EADgB,OAEZF,mBAAS,+BAAtBG,EAFyB,oBAI9BC,qBAAU,kBAAMF,GAAW,KAAO,CAACD,IAEnC,IAAMI,EAAe,WACnBH,GAAW,IAWb,OARID,IACFE,EACE,yBAAK1C,UAAU,WACb,kBAAC,EAAD,CAAO6C,SAAU,kBAAMD,OAM3B,yBAAK5C,UAAU,SACb,kBAAC8C,EAAA,EAAD,CACEC,cAAc,sBACdC,uBAAwB,IACxBC,uBAAwB,KAEvBP,I,MCzBTQ,IAASC,OAAO,kBAACb,EAAD,MAAWc,SAASC,eAAe,W","file":"static/js/main.0ace20e1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../login.css\";\r\nimport { MdAccountCircle, MdAddCircle } from \"react-icons/md\";\r\n\r\nexport default function Sign(props) {\r\n  let icon = null;\r\n\r\n  if (props.type === \"signIn\") {\r\n    icon = <MdAccountCircle className=\"icons\" />;\r\n  } else {\r\n    icon = <MdAddCircle className=\"icons\" />;\r\n  }\r\n\r\n  return (\r\n    <div\r\n      onClick={props.onChange}\r\n      className={props.type === \"signIn\" ? \"signIn\" : \"signUp\"}\r\n    >\r\n      <div className=\"center\">\r\n        {icon}\r\n        <p>{props.type === \"signIn\" ? \"SIGN IN\" : \"SIGN UP\"}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport \"../login.css\";\r\n\r\nexport default function Input(props) {\r\n  return (\r\n    <div className=\"Input\">\r\n      <input\r\n        id={props.name}\r\n        autoComplete=\"false\"\r\n        required\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n      />\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport \"../login.css\";\r\nimport { MdArrowForward } from \"react-icons/md\";\r\n\r\nexport default function SubmitButton(props) {\r\n  return (\r\n    <div className={\"submitButton\"}>\r\n      <button\r\n        className={props.type === \"signIn\" ? \"submitSignIn\" : \"submitSignUp\"}\r\n      >\r\n        <MdArrowForward />\r\n      </button>\r\n    </div>\r\n  );\r\n}","import React, { Component } from \"react\";\r\nimport \"../login.css\";\r\nimport { Motion, spring } from \"react-motion\";\r\nimport Input from \"./Input\";\r\nimport SubmitButton from \"./SubmitButton\";\r\n\r\nexport default class SignExpanded extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      flexState: false,\r\n      animIsFinished: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ flexState: !this.state.flexState });\r\n  }\r\n\r\n  isFinished = () => {\r\n    this.setState({ animIsFinished: true });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Motion\r\n        style={{\r\n          flexVal: spring(this.state.flexState ? 8 : 1),\r\n        }}\r\n        onRest={this.isFinished}\r\n      >\r\n        {({ flexVal }) => (\r\n          <div\r\n            className={\r\n              this.props.type === \"signIn\" ? \"signInExpanded\" : \"signUpExpanded\"\r\n            }\r\n            style={{\r\n              flexGrow: `${flexVal}`,\r\n            }}\r\n          >\r\n            <Motion\r\n              style={{\r\n                opacity: spring(this.state.flexState ? 1 : 0, {\r\n                  stiffness: 300,\r\n                  damping: 17,\r\n                }),\r\n                y: spring(this.state.flexState ? 0 : 50, {\r\n                  stiffness: 100,\r\n                  damping: 17,\r\n                }),\r\n              }}\r\n            >\r\n              {({ opacity, y }) => (\r\n                <form\r\n                  className=\"logForm\"\r\n                  style={{\r\n                    WebkitTransform: `translate3d(0, ${y}px, 0)`,\r\n                    transform: `translate3d(0, ${y}px, 0)`,\r\n                    opacity: `${opacity}`,\r\n                  }}\r\n                >\r\n                  <h2>\r\n                    {this.props.type === \"signIn\" ? \"SIGN IN\" : \"SIGN UP\"}\r\n                  </h2>\r\n                  <Input id=\"login\" type=\"text\" placeholder=\"LOGIN\" />\r\n                  <Input id=\"password\" type=\"password\" placeholder=\"PASSWORD\" />\r\n                  <SubmitButton type={this.props.type}></SubmitButton>\r\n                  <a href=\"url\" className=\"forgotPass\">\r\n                    {this.props.type === \"signIn\" ? \"Forgot password?\" : \"\"}\r\n                  </a>\r\n                </form>\r\n              )}\r\n            </Motion>\r\n          </div>\r\n        )}\r\n      </Motion>\r\n    );\r\n  }\r\n}","import React from \"react\";\r\nimport \"../login.css\";\r\nimport { MdAccountCircle, MdAddCircle } from \"react-icons/md\";\r\n\r\nexport default function SignCollapsed(props) {\r\n  let icon = null;\r\n\r\n  if (props.type === \"signIn\") {\r\n    icon = <MdAccountCircle className=\"iconsCollapsed\" />;\r\n  } else {\r\n    icon = <MdAddCircle className=\"iconsCollapsed\" />;\r\n  }\r\n\r\n  return (\r\n    <div\r\n      onClick={props.onChange}\r\n      className={\r\n        props.type === \"signIn\" ? \"signInCollapsed\" : \"signUpCollapsed\"\r\n      }\r\n    >\r\n      {icon}\r\n    </div>\r\n  );\r\n}","import React, { Component } from \"react\";\r\nimport \"../login.css\";\r\nimport Sign from \"./Sign\";\r\nimport SignExpanded from \"./SignExpanded\";\r\nimport SignCollapsed from \"./SignCollapsed\";\r\n\r\nexport default class Modal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      wasClickedLeft: false,\r\n      wasClickedRight: false,\r\n    };\r\n  }\r\n\r\n  onReset = () => {\r\n    this.setState({\r\n      wasClickedLeft: false,\r\n      wasClickedRight: false,\r\n    });\r\n  };\r\n\r\n  onClickLeft = () => {\r\n    this.setState({ wasClickedLeft: !this.state.wasClickedLeft }, function () {\r\n      if (\r\n        this.state.wasClickedRight === true &&\r\n        this.state.wasClickedLeft === true\r\n      ) {\r\n        this.setState({ wasClickedRight: false });\r\n      }\r\n    });\r\n  };\r\n\r\n  onClickRight = () => {\r\n    this.setState(\r\n      { wasClickedRight: !this.state.wasClickedRight },\r\n      function () {\r\n        if (\r\n          this.state.wasClickedRight === true &&\r\n          this.state.wasClickedLeft === true\r\n        ) {\r\n          this.setState({ wasClickedLeft: false });\r\n        }\r\n      },\r\n    );\r\n  };\r\n\r\n  render() {\r\n    let modalContent = null;\r\n\r\n    if (\r\n      this.state.wasClickedLeft === false &&\r\n      this.state.wasClickedRight === false\r\n    ) {\r\n      modalContent = (\r\n        <div className=\"Modal\">\r\n          <Sign type=\"signUp\" onChange={this.onClickLeft}></Sign>\r\n          <Sign type=\"signIn\" onChange={this.onClickRight}></Sign>\r\n        </div>\r\n      );\r\n    } else if (\r\n      this.state.wasClickedLeft === false &&\r\n      this.state.wasClickedRight === true\r\n    ) {\r\n      modalContent = (\r\n        <div className=\"Modal\">\r\n          <SignCollapsed\r\n            type=\"signUp\"\r\n            onChange={this.onClickLeft}\r\n          ></SignCollapsed>\r\n          <SignExpanded type=\"signIn\"></SignExpanded>\r\n        </div>\r\n      );\r\n    } else if (\r\n      this.state.wasClickedLeft === true &&\r\n      this.state.wasClickedRight === false\r\n    ) {\r\n      modalContent = (\r\n        <div className=\"Modal\">\r\n          <SignExpanded type=\"signUp\"></SignExpanded>\r\n          <SignCollapsed\r\n            type=\"signIn\"\r\n            onChange={this.onClickRight}\r\n          ></SignCollapsed>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return <div className=\"Modal\">{modalContent}</div>;\r\n  }\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport \"./login.css\";\r\nimport { TransitionGroup } from \"react-transition-group\";\r\nimport Modal from \"./components/Modal\";\r\n\r\nexport default function Login() {\r\n  let [mounted, setMounted] = useState(false);\r\n  let [loginPage] = useState(<div></div>);\r\n\r\n  useEffect(() => setMounted(true), [mounted]);\r\n\r\n  const handleSubmit = () => {\r\n    setMounted(false);\r\n  };\r\n\r\n  if (mounted) {\r\n    loginPage = (\r\n      <div className=\"Loginup\">\r\n        <Modal onSubmit={() => handleSubmit} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"Login\">\r\n      <TransitionGroup\r\n        transitioname=\"loginpagetransition\"\r\n        transitionentertimeout={500}\r\n        transitionleavetimeout={300}\r\n      >\r\n        {loginPage}\r\n      </TransitionGroup>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Login from \"./login\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<Login />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}